{"version":3,"sources":["webpack:///./src/components/Pagination.js","webpack:///./src/pages/slicemasters.js"],"names":["PaginationStyles","styled","div","withConfig","displayName","componentId","Pagination","_ref","pageSize","totalCount","currentPage","base","skip","totalPages","Math","ceil","prevPage","nextPage","hasNextPage","hasPrevPage","React","createElement","Link","disabled","to","Array","from","length","map","_","i","className","key","SlicemasterGrid","SlicemasterStyles","SlicemastersPage","data","pageContext","slicemasters","nodes","console","log","Fragment","SEO","title","parseInt","process","person","id","slug","current","name","Img","fluid","image","asset","description"],"mappings":"gNAIMA,EAAmBC,IAAOC,IAAGC,WAAA,CAAAC,YAAA,+BAAAC,YAAA,gBAAVJ,CAAU,mUAwBpB,SAASK,EAAUC,GAM9B,IALFC,EAAQD,EAARC,SACAC,EAAUF,EAAVE,WACAC,EAAWH,EAAXG,YAEAC,GADIJ,EAAJK,KACIL,EAAJI,MAGME,EAAaC,KAAKC,KAAKN,EAAaD,GACpCQ,EAAWN,EAAc,EACzBO,EAAWP,EAAc,EACzBQ,EAAcD,GAAYJ,EAC1BM,EAAcH,GAAY,EAChC,OACEI,IAAAC,cAACrB,EAAgB,KACfoB,IAAAC,cAACC,IAAI,CAACC,UAAWJ,EAAaK,GAAOb,EAAI,IAAIK,GAAY,UAGxDS,MAAMC,KAAK,CAAEC,OAAQd,IAAce,KAAI,SAACC,EAAGC,GAAC,OAC3CV,IAAAC,cAACC,IAAI,CACHS,UAA2B,IAAhBrB,GAA2B,IAANoB,EAAU,UAAY,GACtDE,IAAKF,EACLN,GAAOb,EAAI,KAAImB,EAAI,EAAIA,EAAI,EAAI,KAE9BA,EAAI,MAGTV,IAAAC,cAACC,IAAI,CAACC,UAAWL,EAAaM,GAAOb,EAAI,IAAIM,GAAY,W,gBChDzDgB,EAAkBhC,IAAOC,IAAGC,WAAA,CAAAC,YAAA,gCAAAC,YAAA,gBAAVJ,CAAU,2FAM5BiC,EAAoBjC,IAAOC,IAAGC,WAAA,CAAAC,YAAA,kCAAAC,YAAA,gBAAVJ,CAAU,qUA2BrB,SAASkC,EAAgB5B,GAAyB,IAAtB6B,EAAI7B,EAAJ6B,KAAMC,EAAW9B,EAAX8B,YACzCC,EAAeF,EAAKE,aAAaC,MAEvC,OADAC,QAAQC,IAAIH,GAEVlB,IAAAC,cAAAD,IAAAsB,SAAA,KACEtB,IAAAC,cAACsB,IAAG,CAACC,MAAK,wBAAyBP,EAAY3B,aAAe,KAC9DU,IAAAC,cAACf,EAAU,CACTE,SAAUqC,SAASC,KACnBrC,WAAY2B,EAAKE,aAAa7B,WAC9BC,YAAa2B,EAAY3B,aAAe,EACxCE,KAAMyB,EAAYzB,KAClBD,KAAK,kBAEPS,IAAAC,cAACY,EAAe,KACbK,EAAaV,KAAI,SAACmB,GAAM,OACvB3B,IAAAC,cAACa,EAAiB,CAACF,IAAKe,EAAOC,IAC7B5B,IAAAC,cAACC,IAAI,CAACE,GAAE,gBAAkBuB,EAAOE,KAAKC,SACpC9B,IAAAC,cAAA,UACED,IAAAC,cAAA,QAAMU,UAAU,QAAQgB,EAAOI,QAGnC/B,IAAAC,cAAC+B,IAAG,CAACC,MAAON,EAAOO,MAAMC,MAAMF,QAC/BjC,IAAAC,cAAA,KAAGU,UAAU,eAAegB,EAAOS","file":"component---src-pages-slicemasters-js-8862cda67fe4eaf582b0.js","sourcesContent":["import { Link } from 'gatsby';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst PaginationStyles = styled.div`\n  display: flex;\n  align-content: center;\n  align-items: center;\n  justify-items: center;\n  border: 1px solid var(--grey);\n  border-radius: 5px;\n  text-align: center;\n  & > * {\n    padding: 1rem;\n    flex: 1;\n    border-right: 1px solid var(--grey);\n    text-decoration: none;\n    &[aria-current],\n    &.current {\n      color: var(--red);\n    }\n    &[disabled] {\n      pointer-events: none;\n      color: var(--grey);\n    }\n  }\n`;\n\nexport default function Pagination({\n  pageSize,\n  totalCount,\n  currentPage,\n  skip,\n  base,\n}) {\n  // make some more variables\n  const totalPages = Math.ceil(totalCount / pageSize);\n  const prevPage = currentPage - 1;\n  const nextPage = currentPage + 1;\n  const hasNextPage = nextPage <= totalPages;\n  const hasPrevPage = prevPage >= 1;\n  return (\n    <PaginationStyles>\n      <Link disabled={!hasPrevPage} to={`${base}/${prevPage}`}>\n        &#8592; Prev\n      </Link>\n      {Array.from({ length: totalPages }).map((_, i) => (\n        <Link\n          className={currentPage === 1 && i === 0 ? 'current' : ''}\n          key={i}\n          to={`${base}/${i > 0 ? i + 1 : ''}`}\n        >\n          {i + 1}\n        </Link>\n      ))}\n      <Link disabled={!hasNextPage} to={`${base}/${nextPage}`}>\n        &#8594; Next\n      </Link>\n    </PaginationStyles>\n  );\n}\n","import { Link, graphql } from 'gatsby';\nimport React from 'react';\nimport Img from 'gatsby-image';\nimport styled from 'styled-components';\nimport Pagination from '../components/Pagination';\nimport SEO from '../components/SEO';\n\nconst SlicemasterGrid = styled.div`\n  display: grid;\n  grid-gap: 2rem;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n`;\n\nconst SlicemasterStyles = styled.div`\n  a {\n    text-decoration: none;\n  }\n  .gatsby-image-wrapper {\n    height: 400px;\n  }\n  h2 {\n    transform: rotate(-2deg);\n    text-align: center;\n    font-size: 4rem;\n    margin-bottom: -2rem;\n    position: relative;\n    z-index: 2;\n  }\n  .description {\n    background: var(--yellow);\n    padding: 1rem;\n    margin: 2rem;\n    margin-top: -6rem;\n    z-index: 2;\n    position: relative;\n    transform: rotate(1deg);\n    text-align: center;\n  }\n`;\n\nexport default function SlicemastersPage({ data, pageContext }) {\n  const slicemasters = data.slicemasters.nodes;\n  console.log(slicemasters);\n  return (\n    <>\n      <SEO title={`Slicemasters - Page ${pageContext.currentPage || 1}`} />\n      <Pagination\n        pageSize={parseInt(process.env.GATSBY_PAGE_SIZE)}\n        totalCount={data.slicemasters.totalCount}\n        currentPage={pageContext.currentPage || 1}\n        skip={pageContext.skip}\n        base=\"/slicemasters\"\n      />\n      <SlicemasterGrid>\n        {slicemasters.map((person) => (\n          <SlicemasterStyles key={person.id}>\n            <Link to={`/slicemaster/${person.slug.current}`}>\n              <h2>\n                <span className=\"mark\">{person.name}</span>\n              </h2>\n            </Link>\n            <Img fluid={person.image.asset.fluid} />\n            <p className=\"description\">{person.description}</p>\n          </SlicemasterStyles>\n        ))}\n      </SlicemasterGrid>\n    </>\n  );\n}\n\nexport const query = graphql`\n  query($skip: Int = 0, $pageSize: Int = 4) {\n    slicemasters: allSanityPerson(limit: $pageSize, skip: $skip) {\n      totalCount\n      nodes {\n        name\n        id\n        slug {\n          current\n        }\n        description\n        image {\n          asset {\n            fluid(maxWidth: 410) {\n              ...GatsbySanityImageFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}